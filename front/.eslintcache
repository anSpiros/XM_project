[{"/src/src/reportWebVitals.ts":"1","/src/src/state/reducers/index.ts":"2","/src/src/pages/FormPage.tsx":"3","/src/src/components/Header.tsx":"4","/src/src/state/reducers/results.ts":"5","/src/src/components/Form.tsx":"6","/src/src/index.js":"7","/src/src/App.tsx":"8","/src/src/pages/ResultsPage.tsx":"9","/src/src/state/actions/results.ts":"10","/src/src/components/Results.tsx":"11","/src/src/components/DisplayDataTable.tsx":"12","/src/src/components/ErrorMessage.tsx":"13","/src/src/routes/routes.ts":"14","/src/src/pages/HomePage.tsx":"15","/src/src/components/CustomSelect.tsx":"16","/src/src/data/symbols.ts":"17"},{"size":426,"mtime":1606073893349,"results":"18","hashOfConfig":"19"},{"size":180,"mtime":1606073893349,"results":"20","hashOfConfig":"19"},{"size":616,"mtime":1606073893349,"results":"21","hashOfConfig":"19"},{"size":919,"mtime":1606073893349,"results":"22","hashOfConfig":"19"},{"size":309,"mtime":1606073893349,"results":"23","hashOfConfig":"19"},{"size":6881,"mtime":1606073893349,"results":"24","hashOfConfig":"19"},{"size":919,"mtime":1606073893349,"results":"25","hashOfConfig":"19"},{"size":885,"mtime":1606073893349,"results":"26","hashOfConfig":"19"},{"size":3953,"mtime":1606073893349,"results":"27","hashOfConfig":"19"},{"size":253,"mtime":1606073893349,"results":"28","hashOfConfig":"19"},{"size":1242,"mtime":1606073893349,"results":"29","hashOfConfig":"19"},{"size":1425,"mtime":1606073893349,"results":"30","hashOfConfig":"19"},{"size":370,"mtime":1606073893349,"results":"31","hashOfConfig":"19"},{"size":131,"mtime":1606073893349,"results":"32","hashOfConfig":"19"},{"size":138,"mtime":1606073893349,"results":"33","hashOfConfig":"19"},{"size":717,"mtime":1606073893349,"results":"34","hashOfConfig":"19"},{"size":531,"mtime":1606073893349,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hivtr8",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/src/src/reportWebVitals.ts",[],"/src/src/state/reducers/index.ts",[],["75","76"],"/src/src/pages/FormPage.tsx",[],"/src/src/components/Header.tsx",[],"/src/src/state/reducers/results.ts",[],"/src/src/components/Form.tsx",[],["77","78"],"/src/src/index.js",[],["79","80"],"/src/src/App.tsx",[],"/src/src/pages/ResultsPage.tsx",["81"],"import React, { useEffect, useState } from \"react\";\nimport { DisplayDataInterface } from \"../interfaces/display-data.interface\";\nimport _ from \"lodash\";\nimport \"../scss/Results.scss\";\nimport { Link } from \"react-router-dom\";\nimport { FORM_ROUTE } from \"../routes/routes\";\nimport { useSelector } from \"react-redux\";\nimport { ResultState } from \"../state/types/results/types\";\nimport { DisplayData } from \"../interfaces/results.interface\";\nimport Results from \"../components/Results\";\n\nfunction ResultsPage() {\n  const results = useSelector((state: ResultState) => state.results);\n  const [chartData, setChartData] = useState({});\n  const [companyDescription, setCompanyDescription] = useState(\"\");\n  const [displayData, setDisplayData] = useState<DisplayData>({\n    body: [],\n    header: [],\n  });\n  const chart = () => {\n    setChartData({\n      labels: displayData.body.map((data) => {\n        return data.date;\n      }),\n      datasets: [\n        {\n          label: \"open\",\n          data: displayData.body.map((data) => {\n            return data.open;\n          }),\n          backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n          borderWidth: 4,\n        },\n        {\n          label: \"close\",\n          data: displayData.body.map((data) => {\n            return data.close;\n          }),\n          backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n          borderWidth: 4,\n        },\n      ],\n    });\n  };\n  const prepareDataToDisplay = (data: any) => {\n    const body = data.map((data: any) => {\n      const newData: DisplayDataInterface = {\n        date: data[0],\n        open: data[1],\n        high: data[2],\n        low: data[3],\n        close: data[4],\n        volume: data[5],\n      };\n      return newData;\n    });\n    setDisplayData({\n      body: body,\n      header: [\n        {\n          column: \"Date\",\n        },\n        {\n          column: \"Open\",\n        },\n        {\n          column: \"High\",\n        },\n        {\n          column: \"Low\",\n        },\n        {\n          column: \"Close\",\n        },\n        {\n          column: \"Volume\",\n        },\n      ],\n    });\n  };\n\n  const shouldRenderTable = () => {\n    return !_.isEmpty(displayData.header) && !_.isEmpty(displayData.body);\n  };\n\n  useEffect(() => {\n    if (!_.isEmpty(results)) {\n      setCompanyDescription(results.dataset.name);\n      prepareDataToDisplay(results.dataset.data);\n    }\n  }, [results]);\n\n  useEffect(() => {\n    chart();\n  }, [displayData]);\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            stacked: true,\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          ticks: {\n            stacked: true,\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      {!_.isEmpty(results) ? (\n        <>\n          {results.dataset.data.length > 0 ? (\n            <>\n              {shouldRenderTable() ? (\n                <Results\n                  chartData={chartData}\n                  chartOptions={chartOptions}\n                  companyDescription={companyDescription}\n                  displayDataForTable={displayData}\n                />\n              ) : (\n                <div className=\"results-loading\">\n                  <h2>Loading...</h2>\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"results-no-data\">\n              <h2>\n                No data to show. Go back to form to change your preferences.\n              </h2>\n              <Link to={FORM_ROUTE}>Go to form</Link>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"results no-data\">\n          <h2>You must go to form and add your preferences first.</h2>\n          <Link to={FORM_ROUTE}>Go to form</Link>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default ResultsPage;\n","/src/src/state/actions/results.ts",[],"/src/src/components/Results.tsx",[],"/src/src/components/DisplayDataTable.tsx",[],"/src/src/components/ErrorMessage.tsx",[],"/src/src/routes/routes.ts",[],"/src/src/pages/HomePage.tsx",[],"/src/src/components/CustomSelect.tsx",[],["82","83"],"/src/src/data/symbols.ts",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"90","severity":1,"message":"91","line":95,"column":6,"nodeType":"92","endLine":95,"endColumn":19,"suggestions":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"86","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["98"],["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [chart, displayData]",{"range":"101","text":"102"},[2412,2425],"[chart, displayData]"]